openapi: 3.0.0
info:
  title: CompassCar
  version: 1.0.0
  description: 'This API provides a comprehensive solution for managing a car rental service. It includes endpoints for user authentication, customer management, car inventory, and order processing. Key Features: Authentication for secure user login, user management for profiles, customer management for data handling, car management for vehicle listings, and order management for tracking rentals.'

servers:
  - url: http://localhost:3003/compass/api/v1
    description: API test
paths:
  /auth/login:
    post:
      tags:
        - Auth
      description: Login a user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
              required:
                - email
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 'your_jwt_token_here'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Invalid email or password.'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Invalid credentials.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'internal server error'

  /users:
    post:
      tags:
        - Users
      description: Register user in the database, where it is necessary to inform the Name, Email and Password.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    example: d2e48582-554f-444a-8531-b8e69f373db4
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: email is invalid
        '409':
          description: Conflict - Email address already used
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: email address already used.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: internal server error
    get:
      tags:
        - Users
      description: Returns a list of all users of the application.
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '500':
          description: Internal server error
  /users/{id}:
    get:
      tags:
        - Users
      description: Returns a user by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Internal server error
    patch:
      tags:
        - Users
      description: Updates a user by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '404':
          description: User not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Users
      description: Deletes a user by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
        '500':
          description: Internal server error
  /cars:
    post:
      tags:
        - Cars
      description: Create a new car.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                license_plate:
                  type: string
                brand:
                  type: string
                model:
                  type: string
                year:
                  type: number
                km:
                  type: number
                price:
                  type: number
                items:
                  type: array
                  items:
                    type: string
                  maxItems: 5
              required:
                - license_plate
                - brand
                - model
                - year
                - km
                - price
                - items
      responses:
        '201':
          description: Car created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 'car_id_example'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Items must be unique'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: internal server error
    get:
      tags:
        - Cars
      description: Returns a list of all cars.
      responses:
        '200':
          description: List of cars
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    license_plate:
                      type: string
                    brand:
                      type: string
                    model:
                      type: string
                    year:
                      type: number
                    km:
                      type: number
                    price:
                      type: number
                    items:
                      type: array
                      items:
                        type: string
        '500':
          description: Internal server error
  /cars/{id}:
    get:
      tags:
        - Cars
      description: Returns a car by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: Car ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Car found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  license_plate:
                    type: string
                  brand:
                    type: string
                  model:
                    type: string
                  year:
                    type: number
                  km:
                    type: number
                  price:
                    type: number
                  items:
                    type: array
                    items:
                      type: string
        '404':
          description: Car not found
        '500':
          description: Internal server error
    patch:
      tags:
        - Cars
      description: Updates a car by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: Car ID
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                license_plate:
                  type: string
                brand:
                  type: string
                model:
                  type: string
                year:
                  type: number
                km:
                  type: number
                price:
                  type: number
                items:
                  type: array
                  items:
                    type: string
                  maxItems: 5
              required:
                - license_plate
                - brand
                - model
                - year
                - km
                - price
                - items
      responses:
        '200':
          description: Car updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: Bad Request
        '404':
          description: Car not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Cars
      description: Deletes a car by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: Car ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Car deleted
        '404':
          description: Car not found
        '500':
          description: Internal server error
  /customers:
    get:
      tags:
        - Customers
      description: Returns a list of all customers.
      responses:
        '200':
          description: List of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    birth_date:
                      type: string
                      format: date
                    cpf:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
        '500':
          description: Internal server error
    post:
      tags:
        - Customers
      description: Create a new customer.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                birth_date:
                  type: string
                  format: date
                cpf:
                  type: string
                email:
                  type: string
                phone:
                  type: string
              required:
                - name
                - birth_date
                - cpf
                - email
                - phone
      responses:
        '201':
          description: Customer created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 'customer_id_example'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'the CPF must be in the format 123123123-99.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: internal server error
  /customers/{id}:
    get:
      tags:
        - Customers
      description: Returns a customer by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: Customer ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Customer found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  birth_date:
                    type: string
                    format: date
                  cpf:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
        '404':
          description: Customer not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Customers
      description: Deletes a customer by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: Customer ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Customer deleted
        '404':
          description: Customer not found
        '500':
          description: Internal server error
    patch:
      tags:
        - Customers
      description: Updates a customer by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: Customer ID
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                birth_date:
                  type: string
                  format: date
                cpf:
                  type: string
                email:
                  type: string
                phone:
                  type: string
              required:
                - name
                - birth_date
                - cpf
                - email
                - phone
      responses:
        '200':
          description: Customer updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: Bad Request
        '404':
          description: Customer not found
        '500':
          description: Internal server error
  /orders:
    post:
      tags:
        - Orders
      description: Create a new order.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  format: uuid
                car_id:
                  type: string
                  format: uuid
                cep:
                  type: string
                start_date:
                  type: string
                  format: date
                end_date:
                  type: string
                  format: date
              required:
                - customer_id
                - car_id
                - cep
                - start_date
                - end_date
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 'order_id_example'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Invalid input.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: internal server error
    get:
      tags:
        - Orders
      description: Returns a list of all orders.
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    customer_id:
                      type: string
                    car_id:
                      type: string
                    cep:
                      type: string
                    start_date:
                      type: string
                      format: date
                    end_date:
                      type: string
                    status:
                      type: string
        '500':
          description: Internal server error
  /orders/{id}:
    get:
      tags:
        - Orders
      description: Returns an order by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Order found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  customer_id:
                    type: string
                  car_id:
                    type: string
                  cep:
                    type: string
                  start_date:
                    type: string
                    format: date
                  end_date:
                    type: string
                  status:
                    type: string
        '404':
          description: Order not found
        '500':
          description: Internal server error
    patch:
      tags:
        - Orders
      description: Updates an order by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cep:
                  type: string
                start_date:
                  type: string
                  format: date
                end_date:
                  type: string
                  format: date
                status:
                  type: string
                  enum: [pending, confirmed, completed, canceled]
      responses:
        '200':
          description: Order updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: Bad Request
        '404':
          description: Order not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Orders
      description: Deletes an order by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Order deleted
        '404':
          description: Order not found
        '500':
          description: Internal server error
components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - name
        - email
        - password
    Car:
      type: object
      properties:
        license_plate:
          type: string
        brand:
          type: string
        model:
          type: string
        year:
          type: number
        km:
          type: number
        price:
          type: number
        items:
          type: array
          items:
            type: string
      required:
        - license_plate
        - brand
        - model
        - year
        - km
        - price
        - items
    Customer:
      type: object
      properties:
        name:
          type: string
        birth_date:
          type: string
          format: date
        cpf:
          type: string
        email:
          type: string
        phone:
          type: string
      required:
        - name
        - birth_date
        - cpf
        - email
        - phone
    Order:
      type: object
      properties:
        customer_id:
          type: string
          format: uuid
        car_id:
          type: string
          format: uuid
        cep:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
        status:
          type: string
